name: Dependency Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # =============================================================================
  # CHECK FOR UPDATES
  # =============================================================================
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools safety
        pip install -r backend/requirements.txt
        
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Check Python dependencies for updates
      id: python-updates
      run: |
        pip list --outdated --format=json > python-outdated.json
        echo "python_updates<<EOF" >> $GITHUB_OUTPUT
        cat python-outdated.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Check Node.js dependencies for updates
      id: node-updates
      run: |
        cd frontend
        npm outdated --json > ../node-outdated.json
        echo "node_updates<<EOF" >> $GITHUB_OUTPUT
        cat ../node-outdated.json >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Check for security vulnerabilities
      run: |
        safety check -r backend/requirements.txt --json > safety-report.json
        cd frontend
        npm audit --json > ../npm-audit.json
        
    - name: Upload dependency reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-reports
        path: |
          python-outdated.json
          node-outdated.json
          safety-report.json
          npm-audit.json

  # =============================================================================
  # CREATE UPDATE PR
  # =============================================================================
  create-update-pr:
    name: Create Update PR
    runs-on: ubuntu-latest
    needs: check-updates
    if: github.event_name == 'schedule'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Create update branch
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git checkout -b dependency-updates-$(date +%Y%m%d)
        
    - name: Update Python dependencies
      run: |
        pip install pip-tools
        pip-compile --upgrade backend/requirements.in
        pip-sync backend/requirements.txt
        
    - name: Update Node.js dependencies
      run: |
        cd frontend
        npm update
        npm audit fix --force
        
    - name: Run tests
      run: |
        pip install -r backend/requirements.txt
        pytest tests/unit/ --maxfail=5
        cd frontend
        npm run test:unit
        
    - name: Commit changes
      run: |
        git add .
        git commit -m "chore: update dependencies
        
        - Updated Python dependencies
        - Updated Node.js dependencies
        - Fixed security vulnerabilities
        
        This PR was automatically created by the dependency update workflow."
        
    - name: Push changes
      run: |
        git push origin dependency-updates-$(date +%Y%m%d)
        
    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const { data: pr } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'chore: update dependencies',
            head: 'dependency-updates-$(date +%Y%m%d)',
            base: 'main',
            body: `## Dependency Updates
            
            This PR was automatically created to update project dependencies.
            
            ### Changes
            - Updated Python dependencies
            - Updated Node.js dependencies
            - Fixed security vulnerabilities
            
            ### Testing
            - [x] Unit tests pass
            - [x] Security scan passed
            
            Please review the changes and merge if everything looks good.
            
            ---
            
            *This PR was created automatically by the dependency update workflow.*`
          });
          
          console.log(`Created PR #${pr.number}: ${pr.html_url}`);

  # =============================================================================
  # NOTIFY UPDATES
  # =============================================================================
  notify-updates:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [check-updates, create-update-pr]
    if: always()
    
    steps:
    - name: Download dependency reports
      uses: actions/download-artifact@v3
      with:
        name: dependency-reports
        
    - name: Notify about updates
      run: |
        echo "Dependency update check completed!"
        
        if [ -f "python-outdated.json" ]; then
          echo "Python dependencies with updates:"
          cat python-outdated.json | jq -r '.[] | "\(.name): \(.version) -> \(.latest_version)"'
        fi
        
        if [ -f "node-outdated.json" ]; then
          echo "Node.js dependencies with updates:"
          cat node-outdated.json | jq -r 'to_entries[] | "\(.key): \(.value.current) -> \(.value.latest)"'
        fi
        
        if [ -f "safety-report.json" ]; then
          echo "Security vulnerabilities found:"
          cat safety-report.json | jq -r '.[] | "\(.package): \(.vulnerability)"'
        fi
        
        if [ -f "npm-audit.json" ]; then
          echo "NPM audit vulnerabilities:"
          cat npm-audit.json | jq -r '.vulnerabilities | to_entries[] | "\(.key): \(.value.severity)"'
        fi
